#!/bin/bash
if [ -n "$BINTRAY_API_KEY" ]; then

if ! ccache --version >/dev/null 2>&1; then
apt-get update
apt-get install -y ccache --no-install-recommends
apt-get clean autoclean -y
cat << EOT >> /etc/ccache.conf
# Set maximum cache size and location:
max_size = 768M
cache_dir = /root/ccache
EOT

else
echo ccache already installed
ccache --version
fi

if ! /root/jfrog --version >/dev/null 2>&1; then
cd /root
curl -fL https://getcli.jfrog.io | sh
fi

function upload_cache {
    pushd /root
    ccache -s
    rm $CACHE_ARCHIVE || true
    tar -czf $CACHE_ARCHIVE ./ccache
    ./jfrog bt vd ${BINTRAY_PACKAGE_PATH} --quiet=true --user=${BINTRAY_USER} --key=${BINTRAY_API_KEY}

    echo uploading
    ./jfrog bt u $CACHE_ARCHIVE ${BINTRAY_PACKAGE_PATH} --user=${BINTRAY_USER} --key=${BINTRAY_API_KEY} --publish

    rm $CACHE_ARCHIVE
    popd
}

function download_cache {
    pushd /root
    ./jfrog bt dlv ${BINTRAY_PACKAGE_PATH} --user=${BINTRAY_USER} --key=${BINTRAY_API_KEY}
    tar -xvf $CACHE_ARCHIVE
    rm $CACHE_ARCHIVE
    cp /etc/ccache.conf /root/ccache
    ccache -s
    popd
}

function remove_cache {
    rm -rf /root/ccache
}

/usr/sbin/update-ccache-symlinks
export PATH="/usr/lib/ccache:$PATH"
export JFROG_CLI_OFFER_CONFIG=false

else

echo No BINTRAY_API_KEY set. Disabling cache
function upload_cache {
    echo Cache disabled, not uploading cache.
}

function download_cache {
    echo Cache disabled, not downloading cache.
}

function remove_cache {
    echo Cache disabled, not removing cache.
}

fi
